<div class="bg-gray-100 flex items-center justify-center min-h-screen">
  <div class="w-full max-w-md bg-white rounded-xl shadow-md p-6 border border-gray-200 ">
    <h1 class="text-2xl font-semibold text-gray-900 mb-6 text-center">Generate PDF from SVG</h1>

    <form id="upload" action="/api/v1/conversions" method="post" enctype="multipart/form-data" class="space-y-4">
      <div>
        <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
        <input type="file" name="svg_file" id="svg_file" accept=".svg,image/svg+xml" class="hidden" required>
        <label for="svg_file" class="inline-block cursor-pointer w-full text-center bg-gray-200 text-gray-800
                         py-2 px-4 rounded-md font-medium hover:bg-gray-300 transition">Upload SVG
        </label>
        <p id="file-name" class="text-sm text-gray-600 mt-2 text-center"></p>
      </div>

      <button type="submit"
              class="w-full bg-gray-900 text-white py-2 px-4 rounded-md
                         hover:bg-gray-800 transition duration-200 font-medium">Convert to PDF
      </button>
    </form>

    <div id="result" class="mt-6 bg-white border border-gray-200 rounded-md p-4 hidden text-sm"></div>
  </div>
</div>

<script>
    document.getElementById('upload').addEventListener('submit', async function(e) {
        e.preventDefault();
        const form = e.target;
        const data = new FormData(form);
        const result = document.getElementById('result');

        result.classList.remove('hidden');
        result.innerHTML = '<p class="text-gray-600 text-center">Converting file...</p>';

        try {
            const resp = await fetch(form.action, {
                method: 'POST',
                body: data
            });

            if (!resp.ok) {
                const err = await resp.json();
                result.innerHTML = '<p class="text-red-600 text-center">Error: ' + JSON.stringify(err) + '</p>';
                return;
            }

            const json = await resp.json();
            const url = json.data?.attributes?.download_url;
            const size = json.data?.attributes?.byte_size / 1024;

            if (url) {
                result.innerHTML = `
                  <p class="text-gray-900 text-center">
                      <a href="${url}" target="_blank"
                         class="text-gray-900 hover:underline font-medium">Download PDF</a>
                      <span class="text-gray-600">(${size.toFixed(2)} kb)</span>
                  </p>`;
            } else {
                result.innerHTML = '<p class="text-red-600">Download link was not created</p>';
            }
        } catch (error) {
            result.innerHTML = '<p class="text-red-600">Network error: ' + error.message + '</p>';
        }
    });
</script>

<script>
    const fileInput = document.getElementById('svg_file');
    const fileName = document.getElementById('file-name');

    fileInput.addEventListener('change', () => {
        if (fileInput.files.length > 0) {
            fileName.textContent = fileInput.files[0].name;
        } else {
            fileName.textContent = '';
        }
    });
</script>

